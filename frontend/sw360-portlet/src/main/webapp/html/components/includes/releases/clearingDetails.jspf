<%--
  ~ Copyright Siemens AG, 2013-2017, 2019. Part of the SW360 Portal Project.
  ~
  ~ SPDX-License-Identifier: EPL-1.0
  ~
  ~ All rights reserved. This program and the accompanying materials
  ~ are made available under the terms of the Eclipse Public License v1.0
  ~ which accompanies this distribution, and is available at
  ~ http://www.eclipse.org/legal/epl-v10.html
--%>

<portlet:resourceURL var="loadSpdxLicenseInfoUrl">
    <portlet:param name="<%=PortalConstants.ACTION%>" value='<%=PortalConstants.LOAD_SPDX_LICENSE_INFO%>'/>
</portlet:resourceURL>
<portlet:resourceURL var="writeSpdxLicenseInfoIntoReleaseUrl">
    <portlet:param name="<%=PortalConstants.ACTION%>" value='<%=PortalConstants.WRITE_SPDX_LICENSE_INFO_INTO_RELEASE%>'/>
</portlet:resourceURL>

<%@include file="/html/utils/includes/fossologyClearing.jspf"%>

<core_rt:set var="clearingInfo" value="${release.clearingInformation}"/>

<table class="table info_table" id="spdxAttachments"
        data-load-spdx-license-info-url="<%=loadSpdxLicenseInfoUrl%>"
        data-write-spdx-license-info-into-release-url="<%=writeSpdxLicenseInfoIntoReleaseUrl%>"
        data-release-id-parameter-name="<%=PortalConstants.RELEASE_ID%>"
        data-attachment-id-parameter-name="<%=PortalConstants.ATTACHMENT_ID%>"
        data-spdx-license-info-parameter-name="<%=PortalConstants.SPDX_LICENSE_INFO%>">
    <thead>
        <tr>
            <th colspan="3">SPDX Attachments</th>
        </tr>
    </thead>

    <tbody>
        <core_rt:forEach items="${spdxAttachments}" var="spdxAttachment">
            <tr id="${spdxAttachment.attachmentContentId}">
                <td colspan="2">
                    <sw360:out value="${spdxAttachment.filename}"/>
                </td>
                <td data-attachment-id="${spdxAttachment.attachmentContentId}">
                    <button class="showSpdxContentBtn" data-release-id="${release.id}" data-attachment-id="${spdxAttachment.attachmentContentId}">Show License Info</button>
                </td>
            </tr>
        </core_rt:forEach>
    </tbody>
</table>

<%@ page import="org.eclipse.sw360.portal.common.FossologyConnectionHelper" %>
<%@include file="/html/utils/includes/fossologyClearing.jspf"%>

<core_rt:set var="clearingInfo" value="${release.clearingInformation}"/>
<core_rt:set var="FOSSOLOGY_CONNECTION_ENABLED" value="<%=FossologyConnectionHelper.getInstance().isFossologyConnectionEnabled()%>"/>
<table class="table info_table" id="ReleaseClearingOverview">
    <thead>
    <tr>
        <th colspan="2">Clearing Details: <sw360:ReleaseName release="${release}" /></th>
    </tr>
    </thead>
    <tr>
        <td>Clearing State:</td>
        <td>
            <sw360:DisplayEnum value="${release.clearingState}"/>
            &nbsp;
            <core_rt:choose>
                <core_rt:when test="${not empty FOSSOLOGY_CONNECTION_ENABLED and not FOSSOLOGY_CONNECTION_ENABLED}">
                    <img src='<%=request.getContextPath()%>/images/fossology-logo-grey.gif' title='Fossology is not configured'/>
                </core_rt:when>
                <core_rt:otherwise>
                    <span id='releaseAction${release.id}'>
                        <img class="action send-to-fossology" src='<%=request.getContextPath()%>/images/fossology-logo-24.gif'
                             data-release-id="${release.id}"
                             alt='Send to FOSSology'
                             title='Send to FOSSology'>
                        <span id='fossologySending${release.id}'></span>
                   </span>
                </core_rt:otherwise>
            </core_rt:choose>
        </td>
    </tr>
    <tr>
        <td>Binaries Original from Community:</td>
        <td><sw360:DisplayBoolean defined="${clearingInfo.setBinariesOriginalFromCommunity}"
                                  value="${clearingInfo.binariesOriginalFromCommunity}"/></td>
    </tr>
    <tr>
        <td>Binaries Self-Made:</td>
        <td><sw360:DisplayBoolean defined="${clearingInfo.setBinariesSelfMade}"
                                  value="${clearingInfo.binariesSelfMade}"/></td>
    </tr>
    <tr>
        <td>Component License Information:</td>
        <td><sw360:DisplayBoolean defined="${clearingInfo.setComponentLicenseInformation}"
                                  value="${clearingInfo.componentLicenseInformation}"/></td>
    </tr>
    <tr>
        <td>Source Code Delivery:</td>
        <td><sw360:DisplayBoolean defined="${clearingInfo.setSourceCodeDelivery}"
                                  value="${clearingInfo.sourceCodeDelivery}"/></td>
    </tr>
    <tr>
        <td>Source Code Original from Community:</td>
        <td><sw360:DisplayBoolean defined="${clearingInfo.setSourceCodeOriginalFromCommunity}"
                                  value="${clearingInfo.sourceCodeOriginalFromCommunity}"/></td>
    </tr>
    <tr>
        <td>Source Code Tool-Made:</td>
        <td><sw360:DisplayBoolean defined="${clearingInfo.setSourceCodeToolMade}"
                                  value="${clearingInfo.sourceCodeToolMade}"/></td>
    </tr>
    <tr>
        <td>Source Code Self-Made:</td>
        <td><sw360:DisplayBoolean defined="${clearingInfo.setSourceCodeSelfMade}"
                                  value="${clearingInfo.sourceCodeSelfMade}"/></td>
    </tr>
    <tr>
        <td>Screenshot of Website:</td>
        <td><sw360:DisplayBoolean defined="${clearingInfo.setScreenshotOfWebSite}"
                                  value="${clearingInfo.screenshotOfWebSite}"/></td>
    </tr>
    <tr>
        <td>Finalized License Scan Report:</td>
        <td><sw360:DisplayBoolean defined="${clearingInfo.setFinalizedLicenseScanReport}"
                                  value="${clearingInfo.finalizedLicenseScanReport}"/></td>
    </tr>
    <tr>
        <td>License Scan Report Result:</td>
        <td><sw360:DisplayBoolean defined="${clearingInfo.setLicenseScanReportResult}"
                                  value="${clearingInfo.licenseScanReportResult}"/></td>
    </tr>
    <tr>
        <td>Legal Evaluation:</td>
        <td><sw360:DisplayBoolean defined="${clearingInfo.setLegalEvaluation}"
                                  value="${clearingInfo.legalEvaluation}"/></td>
    </tr>
    <tr>
        <td>License Agreement:</td>
        <td><sw360:DisplayBoolean defined="${clearingInfo.setLicenseAgreement}"
                                  value="${clearingInfo.licenseAgreement}"/></td>
    </tr>
    <tr>
        <td>Scanned:</td>
        <td><sw360:out value="${clearingInfo.scanned}"/></td>
    </tr>
    <tr>
        <td>Component Clearing Report:
        </td>
        <td><sw360:DisplayBoolean defined="${clearingInfo.setComponentClearingReport}"
                                  value="${clearingInfo.componentClearingReport}"/></td>
    </tr>
    <tr>
        <td>Clearing Standard:</td>
        <td><sw360:out value="${clearingInfo.clearingStandard}"/></td>
    </tr>
    <tr>
        <td>External URL:</td>
        <td><sw360:DisplayLink target="${clearingInfo.externalUrl}"/></td>
    </tr>
    <tr>
        <td>Comments:</td>
        <td><sw360:out value="${clearingInfo.comment}"/></td>
    </tr>
</table>

<table class="table info_table" id="RequestInfo">
    <thead>
    <tr>
        <th colspan="2">Request Information</th>
    </tr>
    </thead>

    <tr>
        <td>Request ID:</td>
        <td><sw360:out value="${clearingInfo.requestID}"/></td>
    </tr>
    <tr>
        <td>Additional Request Information:</td>
        <td><sw360:out value="${clearingInfo.additionalRequestInfo}"/></td>
    </tr>
    <tr>
        <td>Evaluation Start:</td>
        <td><sw360:out value="${clearingInfo.procStart}"/></td>
    </tr>
    <tr>
        <td>Evaluation End</td>
        <td><sw360:out value="${clearingInfo.evaluated}"/></td>
    </tr>
</table>

<table class="table info_table" id="ReleaseSupplementalInfo">
    <thead>
    <tr>
        <th colspan="2">Supplemental Information</th>
    </tr>
    </thead>
    <tr>
        <td>External Supplier ID:</td>
        <td><sw360:out value="${clearingInfo.externalSupplierID}"/></td>
    </tr>
    <tr>
        <td>Number of Security VN:</td>
        <td><sw360:out value="${clearingInfo.countOfSecurityVn}"/></td>
    </tr>
</table>

<script type="text/javascript">
    require(['jquery', 'utils/includes/fossologyClearing'], function ($, fossology) {

        Liferay.on('allPortletsReady', function() {
            fossology.initialize();

            $('#ReleaseClearingOverview').on('click', '.action.send-to-fossology', function(event) {
                var data = $(event.currentTarget).data();
                fossology.openSelectClearingDialog('fossologySending', data.releaseId);
            });

            $('.showSpdxContentBtn').on('click', function(event) {
                handleShowSpdxContentClick($(event.currentTarget));
            });

            function handleShowSpdxContentClick($btn) {
                var tableData = $('#spdxAttachments').data(),
                    rawUrl = tableData.loadSpdxLicenseInfoUrl,
                    url = Liferay.PortletURL.createURL(rawUrl),
                    btnData = $btn.data(),
                    releaseId = btnData.releaseId,
                    attachmentId = btnData.attachmentId,
                    $row = $('#' + attachmentId),
                    $btnCell = $row.find('td[data-attachment-id=' + attachmentId + ']');

                url.setParameter(tableData.releaseIdParameterName, releaseId);
                url.setParameter(tableData.attachmentIdParameterName, attachmentId);

                replaceContentWithSpinner($btnCell);

                $.ajax({
                    type: 'GET',
                    dataType: 'json',
                    url: url.toString(),
                }).done(function(result) {
                    if (!result || result.length == 0 || Object.getOwnPropertyNames(result).length == 0) {
                        replaceContentWithWarning($btnCell, 'No license information found in file.');
                    } else {
                        printResult($row, result);
                        addTakeOverBtn($btnCell, releaseId, attachmentId, result);
                    }
                }).fail(function(error) {
                    replaceContentWithError($btnCell, 'Cannot load license information: ' + error.statusText + ' (' + error.status + ').');
                });
            }

            function printResult($sibbling, data) {
                var $resultRow = $('<tr style="background-color: #f8f7f7;">');

                $resultRow.append($('<td>'));
                $resultRow.append($('<td>').append($('<span>', { text: 'Concluded License Ids'})));
                $resultRow.append($('<td>').append($('<span>', { text: data.concludedLicenseIds.join(', ')})));

                $sibbling.after($resultRow);
            }

            function addTakeOverBtn($parent, releaseId, attachmentId, data) {
                var $newBtn = $('<button>', { 'class': 'spdxTakeOverBtn', 'data-release-id': releaseId, 'data-attachment-id': attachmentId, text: 'Add data to this release' });

                $newBtn.data('result', data);
                $parent.html('');
                $parent.append($newBtn);

                $newBtn.on('click', function(event) {
                    handleTakeOverClick($(event.currentTarget));
                });
            }

            function handleTakeOverClick($btn) {
                var tableData = $('#spdxAttachments').data(),
                    rawUrl = tableData.writeSpdxLicenseInfoIntoReleaseUrl,
                    url = Liferay.PortletURL.createURL(rawUrl),
                    btnData = $btn.data(),
                    releaseId = btnData.releaseId,
                    attachmentId = btnData.attachmentId,
                    data = btnData.result,
                    $row = $('#' + attachmentId),
                    $btnCell = $row.find('td[data-attachment-id=' + attachmentId + ']'),
                    dataObj = {};

                url.setParameter(tableData.releaseIdParameterName, releaseId);
                dataObj[ '<portlet:namespace/>' + tableData.spdxLicenseInfoParameterName ] = JSON.stringify(data);

                replaceContentWithSpinner($btnCell);

                $.ajax({
                    type: 'POST',
                    dataType: 'json',
                    url: url.toString(),
                    data: dataObj
                }).done(function(result) {
                    if (!result || result.length == 0 || result.result !== 'SUCCESS') {
                        replaceContentWithError($btnCell, 'Could not write SPDX data into release: ' + result.result);
                    } else {
                        replaceContentWithSuccess($btnCell, 'Success! Please reload page to see the changes!');
                    }
                }).fail(function(error) {
                    replaceContentWithError($btnCell, 'Could not write SPDX data into release: ' + error.statusText + ' (' + error.status + ').');
                });
            }

            function replaceContentWithSuccess($parent, message) {
                replaceContentWith($parent, 'backgroundOK', null, message);
            }
            function replaceContentWithWarning($parent, message) {
                replaceContentWith($parent, 'backgroundWarning', null, message);
            }
            function replaceContentWithError($parent, message) {
                replaceContentWith($parent, 'backgroundAlert', null, message);
            }
            function replaceContentWithSpinner($parent) {
                replaceContentWith($parent, null, 'spinner', 'Loading SPDX file information. Please wait...');
            }
            function replaceContentWith($parent, parentStyleClass, styleClass, message) {
                $parent.html('');
                $parent.attr('class', parentStyleClass ? parentStyleClass : '');
                $parent.append($('<div>', { 'class': styleClass ? styleClass : '' })
                       .append($('<span>', { 'text': message })));
            }
        });

    });
</script>
