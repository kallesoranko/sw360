<%--
  ~ Copyright Siemens AG, 2016-2017. Part of the SW360 Portal Project.
  ~ With modifications from Bosch Software Innovations GmbH, 2016.
  ~
  ~ SPDX-License-Identifier: EPL-1.0
  ~
  ~ All rights reserved. This program and the accompanying materials
  ~ are made available under the terms of the Eclipse Public License v1.0
  ~ which accompanies this distribution, and is available at
  ~ http://www.eclipse.org/legal/epl-v10.html
--%>
<%@ page import="com.liferay.portlet.PortletURLFactoryUtil" %>
<%@ page import="javax.portlet.PortletRequest" %>
<%@ page import="org.eclipse.sw360.portal.common.page.PortletReleasePage" %>
<%@ page import="org.eclipse.sw360.datahandler.thrift.RequestStatus" %>
<%@ page import="org.eclipse.sw360.datahandler.thrift.VerificationState" %>
<%@ page import="org.eclipse.sw360.portal.common.PortalConstants" %>

<portlet:resourceURL var="updateVulnerabilitiesURL">
    <portlet:param name="<%=PortalConstants.ACTION%>" value="<%=PortalConstants.UPDATE_VULNERABILITIES_RELEASE%>"/>
</portlet:resourceURL>
<portlet:resourceURL var="updateVulnerabilityVerification">
    <portlet:param name="<%=PortalConstants.ACTION%>" value="<%=PortalConstants.UPDATE_VULNERABILITY_VERIFICATION%>"/>
</portlet:resourceURL>
<jsp:useBean id="vulnerabilityVerifications"
             type="java.util.Map<java.lang.String, org.eclipse.sw360.datahandler.thrift.VerificationState>"
             scope="request"/>
<jsp:useBean id="vulnerabilityVerificationTooltips" type="java.util.Map<java.lang.String, java.lang.String>"
             scope="request"/>
<jsp:useBean id="vulnerabilityMatchedByHistogram" type="java.util.Map<java.lang.String, java.lang.Long>" scope="request"/>
<jsp:useBean id="vulnerabilityList" type="java.util.List<org.eclipse.sw360.datahandler.thrift.vulnerabilities.VulnerabilityDTO>" scope="request"/>
<jsp:useBean id="numberOfVulnerabilities" type="java.lang.Integer" scope="request"/>
<jsp:useBean id="viewSize" type="java.lang.Integer" scope="request"/>

<link rel="stylesheet" href="<%=request.getContextPath()%>/webjars/datatables.net-buttons-bs/css/buttons.bootstrap.min.css"/>
<link rel="stylesheet" href="<%=request.getContextPath()%>/webjars/datatables.net-select-bs/css/select.bootstrap.min.css"/>

<p>
    Showing
    <select class="searchbar" id="view_size" name="<portlet:namespace/><%=PortalConstants.VIEW_SIZE%>" onchange="reloadViewSize()">
        <option value="200" <core_rt:if test="${viewSize == 200}">selected</core_rt:if>>200 latest</option>
        <option value="500" <core_rt:if test="${viewSize == 500}">selected</core_rt:if>>500 latest</option>
        <option value="1000" <core_rt:if test="${viewSize == 1000}">selected</core_rt:if>>1000 latest</option>
        <option value="-1" <core_rt:if test="${viewSize == -1}">selected</core_rt:if>>All</option>
    </select>
    vulnerabilities out of ${numberOfVulnerabilities} in total.
</p>
<div id="vulnerabilityTableDiv">
    <form>
        <table id="vulnerabilityTable" cellpadding="0" cellspacing="0" border="0" class="display">
            <tfoot>
            <tr>
                <th colspan="7"></th>
            </tr>
            </tfoot>
        </table>
    </form>
    <%@include file="/html/utils/includes/modal.jspf" %>
    <%@include file="/html/utils/includes/vulnerabilityModal.jspf" %>
</div>
<core_rt:if test="${vulnerabilityVerificationEditable}">
    <div>
        Change verification state of selected vulnerabilities to
        <select class="toplabelledInput action change-vulnerability"
                id="rating-change-for-selected"
                name="<portlet:namespace/><%=VerificationState.class%>"
                style="min-width: 90px; min-height: 28px;">
            <sw360:DisplayEnumOptions type="<%=VerificationState.class%>" inQuotes="true"/> +
        </select>
        <input type="button" id="apply-to-selected" value="Apply" class="addButton">
    </div>
</core_rt:if>
<div style="clear:both"></div>
<div class="pull-left">
    <ul>
        <core_rt:forEach items="${vulnerabilityMatchedByHistogram.keySet()}" var="matchedBy">
            <li>
                <b><sw360:out value='${vulnerabilityMatchedByHistogram.get(matchedBy)}'/></b>
                of the vulnerabilities were matched by
                <b><sw360:out value='${matchedBy}'/></b>
            </li>
        </core_rt:forEach>
    </ul>
</div>

<script type="text/javascript">
    function reloadViewSize(){
        var PortletURL = Liferay.PortletURL;
        var portletURL = PortletURL.createURL('<%= PortletURLFactoryUtil.create(request, portletDisplay.getId(), themeDisplay.getPlid(), PortletRequest.RENDER_PHASE) %>');
        portletURL.setParameter('<%=PortalConstants.PAGENAME%>', '<%=PortalConstants.PAGENAME_RELEASE_DETAIL%>');
        portletURL.setParameter('<%=PortalConstants.COMPONENT_ID%>', '${component.id}');
        portletURL.setParameter('<%=PortalConstants.RELEASE_ID%>', '${release.id}');
        portletURL.setParameter('<%=PortalConstants.VIEW_SIZE%>', $('#view_size').val());
        window.location.href=portletURL.toString();
    }

    require(['jquery', 'utils/includes/vulnerabilityModal', /* jquery-plugins */ 'jquery-ui', 'datatables.net', 'modules/datatables-utils', 'datatables.net-select', 'datatables.net-buttons'], function ($, vulnerarbilityModal) {
        var vulnerabilityTable;
        var modal;

        Liferay.on('allPortletsReady', function() {
            createVulnerabilityTable();

            <core_rt:if test="${vulnerabilityVerificationEditable}">
                $('#apply-to-selected').on('click', function () {
                    batchChangeVerification();
                });
            </core_rt:if>
        });

        function createVulnerabilityTable() {
            var result = [];
            <core_rt:forEach items="${vulnerabilityList}" var="vulnerability">
            result.push({
                "DT_RowId": "${vulnerability.id}",
                "0": '',
                "1": "<sw360:DisplayVulnerabilityLink vulnerabilityId="${vulnerability.externalId}"/>",
                "2": '<div class="dataTables_cell_nowrap" title="<sw360:out value='${vulnerability.priorityToolTip}'/>">${vulnerability.priority}<img class="infopic" src="/sw360-portlet/images/ic_info.png"/></div>',
                "3": '<div class="dataTables_cell_nowrap" style="max-width:500px;" title="<sw360:out value='${vulnerability.title} - ${vulnerability.description}'/>">' +
                        '<sw360:out value='${vulnerability.title}'/></div>',
                "4": '<span title="Found with needle: <sw360:out value='${vulnerability.usedNeedle}'/>"><sw360:out value='${vulnerability.matchedBy}'/></span>',
                "5": "<span title='<sw360:out value="${vulnerabilityVerificationTooltips.get(vulnerability.externalId).get(releaseId)}"/>'><sw360:DisplayEnum value='${vulnerabilityVerifications.get(vulnerability.externalId).get(releaseId)}'/></div>",
                "6": '<div class="dataTables_cell_nowrap"><sw360:out value="${vulnerability.action}"/></div>',
                "externalId": "<sw360:out value="${vulnerability.externalId}"/>"
            });
            </core_rt:forEach>

            vulnerabilityTable = $('#vulnerabilityTable').DataTable({
                <core_rt:if test="${vulnerabilityVerificationEditable}">
                    dom: 'lfrtBip',
                    buttons: [
                        {
                            text: 'Select all',
                            action: function () {
                                vulnerabilityTable.rows().select();
                            }
                        },
                        {
                            text: 'Select none',
                            action: function () {
                                vulnerabilityTable.rows().deselect();
                            }
                        }
                    ],
                    columnDefs: [{
                        orderable: false,
                        className: 'select-checkbox',
                        checkboxes: {
                            selectRow: true
                        },
                        targets: 0
                    }],
                    select: {
                        style: 'multi+shift'
                    },
                </core_rt:if>
                pagingType: "simple_numbers",
                "data": result,
                "columns": [
                    {},
                    {"title": "External id"},
                    {"title": "Priority"},
                    {"title": "Title"},
                    {"title": "Matched by"},
                    {"title": "Verification"},
                    {"title": "Action"}
                ],
                "order": [[2, 'asc'], [3, 'desc']],
                "autoWidth": false
            });
            vulnerabilityTable.$('td').tooltip({
                "delay": 0,
                "track": true,
                "fade": 250,
                "content": function () {
                    return $(this).prop('title');
                }
            });
        }

        <core_rt:if test="${vulnerabilityVerificationEditable}">
            function batchChangeVerification() {
                var selectedRows = vulnerabilityTable.rows('.selected');
                var selectedValue = $("#rating-change-for-selected").children("option:selected");

                var newValue = selectedValue.val();
                var newValueText = selectedValue.text();
                var headerText = "If you want to change the verification of " + selectedRows.data().length + " vulnerabilities to &raquo;" + newValueText +
                    "&laquo; enter a comment and press OK.";
                var ratingChangeCallback = function (comment) {
                    executeRatingChange(selectedRows, newValue, newValueText, comment);
                };
                var cancelCallback = function () {
                };
                ratingModal = vulnerarbilityModal.createModalDialog(headerText, ratingChangeCallback, cancelCallback);
            }

            function executeRatingChange(selectedRows, newValue, newValueText, comment) {
                var vulnerabilityIds = [];
                var releaseIds = [];

                selectedRows.data().each(function (item) {
                    vulnerabilityIds.push(item['externalId']);
                    releaseIds.push(item['intReleaseId']);
                });

                var data = {};
                data["<portlet:namespace/><%=PortalConstants.RELEASE_IDS%>"] = releaseIds;
                data["<portlet:namespace/><%=PortalConstants.VULNERABILITY_IDS%>"] = vulnerabilityIds;
                data["<portlet:namespace/><%=PortalConstants.VULNERABILITY_VERIFICATION_VALUE%>"] = newValue;
                data["<portlet:namespace/><%=PortalConstants.VULNERABILITY_VERIFICATION_COMMENT%>"] = comment;

                $.ajax({
                    url: '<%=updateVulnerabilityVerification%>',
                    type: 'POST',
                    dataType: 'json',
                    data: data,
                    success: function(response){
                        switch (response.<%=PortalConstants.REQUEST_STATUS%>) {
                            case '<%=RequestStatus.FAILURE%>':
                                showStatusPopup("", modal, "Update failed.");
                                break;
                            case '<%=RequestStatus.SUCCESS%>':
                                document.getElementById("numberOfVulnerabilitiesDiv").class = "numberOfVulnerabilitiesNeedUpdate";
                                document.getElementById("numberOfVulnerabilitiesDiv").innerHTML = '&#8634;';

                                selectedRows.every(function () {
                                    var row = this.data();
                                    row["6"] = "<span title='You just changed this value.'>" + newValueText + "</span>";
                                    this.invalidate();
                                });
                                vulnerabilityTable.draw();
                                break;
                            default:
                        }
                    }
                });
            }
        </core_rt:if>
    });
</script>
